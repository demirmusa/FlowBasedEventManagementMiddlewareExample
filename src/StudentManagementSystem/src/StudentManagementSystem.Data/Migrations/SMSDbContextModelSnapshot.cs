// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentManagementSystem.Data;

namespace StudentManagementSystem.Data.Migrations
{
    [DbContext(typeof(SMSDbContext))]
    partial class SMSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StudentManagementSystem.Data.dbEntities.CourseInformation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseDescription");

                    b.Property<string>("CourseTitle");

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("Deleted");

                    b.Property<int?>("FKPreviousVersionID");

                    b.Property<int>("FKTeacherID");

                    b.Property<DateTime?>("LastUpdateTime");

                    b.HasKey("ID");

                    b.HasIndex("FKTeacherID");

                    b.ToTable("CourseInformations");
                });

            modelBuilder.Entity("StudentManagementSystem.Data.dbEntities.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("Deleted");

                    b.Property<int?>("FKPopulationInformationID");

                    b.Property<DateTime?>("LastUpdateTime");

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.HasKey("ID");

                    b.HasIndex("FKPopulationInformationID");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("StudentManagementSystem.Data.dbEntities.PopulationInformation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDay");

                    b.Property<string>("BirthPlace");

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("Deleted");

                    b.Property<string>("FatherName");

                    b.Property<DateTime?>("LastUpdateTime");

                    b.Property<string>("MotherName");

                    b.Property<string>("Nationality");

                    b.HasKey("ID");

                    b.ToTable("PopulationInformations");
                });

            modelBuilder.Entity("StudentManagementSystem.Data.dbEntities.StudentCourseJunction", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("FKCourseID");

                    b.Property<int>("FKStudentID");

                    b.Property<DateTime?>("LastUpdateTime");

                    b.HasKey("ID");

                    b.ToTable("StudentCourseJunctions");
                });

            modelBuilder.Entity("StudentManagementSystem.Data.dbEntities.StudentCourseScore", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("Deleted");

                    b.Property<int>("FKCourseID");

                    b.Property<int?>("FKPreviousVersionID");

                    b.Property<int>("FKStudentID");

                    b.Property<DateTime?>("LastUpdateTime");

                    b.Property<double>("Score");

                    b.HasKey("ID");

                    b.ToTable("StudentCourseScores");
                });

            modelBuilder.Entity("StudentManagementSystem.Data.dbEntities.StudentInformation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("Deleted");

                    b.Property<int>("FKUserID");

                    b.Property<DateTime?>("LastUpdateTime");

                    b.Property<DateTime>("RegistrationDate");

                    b.Property<string>("StudentNumber");

                    b.HasKey("ID");

                    b.HasIndex("FKUserID");

                    b.HasIndex("StudentNumber")
                        .IsUnique()
                        .HasFilter("[StudentNumber] IS NOT NULL");

                    b.ToTable("StudentInformations");
                });

            modelBuilder.Entity("StudentManagementSystem.Data.dbEntities.Teacher", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("CurrentTitle");

                    b.Property<bool>("Deleted");

                    b.Property<int>("FKUserID");

                    b.Property<DateTime?>("LastUpdateTime");

                    b.HasKey("ID");

                    b.HasIndex("FKUserID");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("StudentManagementSystem.Data.dbEntities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Email");

                    b.Property<int>("FKPersonID");

                    b.Property<DateTime?>("LastUpdateTime");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("UserName");

                    b.HasKey("ID");

                    b.HasIndex("FKPersonID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StudentManagementSystem.Data.dbEntities.CourseInformation", b =>
                {
                    b.HasOne("StudentManagementSystem.Data.dbEntities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("FKTeacherID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentManagementSystem.Data.dbEntities.Person", b =>
                {
                    b.HasOne("StudentManagementSystem.Data.dbEntities.PopulationInformation", "PopulationInformation")
                        .WithMany()
                        .HasForeignKey("FKPopulationInformationID");
                });

            modelBuilder.Entity("StudentManagementSystem.Data.dbEntities.StudentInformation", b =>
                {
                    b.HasOne("StudentManagementSystem.Data.dbEntities.User", "User")
                        .WithMany()
                        .HasForeignKey("FKUserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentManagementSystem.Data.dbEntities.Teacher", b =>
                {
                    b.HasOne("StudentManagementSystem.Data.dbEntities.User", "User")
                        .WithMany()
                        .HasForeignKey("FKUserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentManagementSystem.Data.dbEntities.User", b =>
                {
                    b.HasOne("StudentManagementSystem.Data.dbEntities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("FKPersonID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
