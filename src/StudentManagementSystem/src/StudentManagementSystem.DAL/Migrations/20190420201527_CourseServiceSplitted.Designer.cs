// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentManagementSystem.DAL;

namespace StudentManagementSystem.DAL.Migrations
{
    [DbContext(typeof(SMSDbContext))]
    [Migration("20190420201527_CourseServiceSplitted")]
    partial class CourseServiceSplitted
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StudentManagementSystem.DAL.DbEntities.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("Deleted");

                    b.Property<int?>("FKPopulationInformationID");

                    b.Property<DateTime?>("LastUpdateTime");

                    b.Property<string>("Name");

                    b.Property<string>("PhotoUrl");

                    b.Property<string>("Surname");

                    b.HasKey("ID");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("StudentManagementSystem.DAL.DbEntities.StudentInformation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("Deleted");

                    b.Property<int>("FKUserID");

                    b.Property<DateTime?>("LastUpdateTime");

                    b.Property<DateTime>("RegistrationDate");

                    b.Property<string>("StudentNumber");

                    b.HasKey("ID");

                    b.HasIndex("FKUserID");

                    b.HasIndex("StudentNumber")
                        .IsUnique()
                        .HasFilter("[StudentNumber] IS NOT NULL");

                    b.ToTable("StudentInformations");
                });

            modelBuilder.Entity("StudentManagementSystem.DAL.DbEntities.Teacher", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("CurrentTitle");

                    b.Property<bool>("Deleted");

                    b.Property<int>("FKUserID");

                    b.Property<DateTime?>("LastUpdateTime");

                    b.HasKey("ID");

                    b.HasIndex("FKUserID");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("StudentManagementSystem.DAL.DbEntities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Email");

                    b.Property<int>("FKPersonID");

                    b.Property<DateTime?>("LastUpdateTime");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("UserName");

                    b.HasKey("ID");

                    b.HasIndex("FKPersonID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StudentManagementSystem.DAL.DbEntities.StudentInformation", b =>
                {
                    b.HasOne("StudentManagementSystem.DAL.DbEntities.User", "User")
                        .WithMany()
                        .HasForeignKey("FKUserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentManagementSystem.DAL.DbEntities.Teacher", b =>
                {
                    b.HasOne("StudentManagementSystem.DAL.DbEntities.User", "User")
                        .WithMany()
                        .HasForeignKey("FKUserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentManagementSystem.DAL.DbEntities.User", b =>
                {
                    b.HasOne("StudentManagementSystem.DAL.DbEntities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("FKPersonID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
